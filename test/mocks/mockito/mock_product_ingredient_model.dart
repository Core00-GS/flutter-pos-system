// Mocks generated by Mockito 5.0.9 from annotations
// in possystem/test/models/menu/product_ingredient_model_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i9;

import 'package:mockito/mockito.dart' as _i1;
import 'package:possystem/models/menu/product_ingredient_model.dart' as _i5;
import 'package:possystem/models/menu/product_model.dart' as _i2;
import 'package:possystem/models/menu/product_quantity_model.dart' as _i8;
import 'package:possystem/models/objects/menu_object.dart' as _i4;
import 'package:possystem/models/stock/ingredient_model.dart' as _i3;
import 'package:possystem/services/storage.dart' as _i7;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeProductModel extends _i1.Fake implements _i2.ProductModel {}

class _FakeIngredientModel extends _i1.Fake implements _i3.IngredientModel {}

class _FakeProductIngredientObject extends _i1.Fake
    implements _i4.ProductIngredientObject {}

/// A class which mocks [ProductIngredientModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductIngredientModel extends _i1.Mock
    implements _i5.ProductIngredientModel {
  MockProductIngredientModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ProductModel get product =>
      (super.noSuchMethod(Invocation.getter(#product),
          returnValue: _FakeProductModel()) as _i2.ProductModel);
  @override
  set product(_i2.ProductModel? _product) =>
      super.noSuchMethod(Invocation.setter(#product, _product),
          returnValueForMissingStub: null);
  @override
  _i3.IngredientModel get ingredient =>
      (super.noSuchMethod(Invocation.getter(#ingredient),
          returnValue: _FakeIngredientModel()) as _i3.IngredientModel);
  @override
  set ingredient(_i3.IngredientModel? _ingredient) =>
      super.noSuchMethod(Invocation.setter(#ingredient, _ingredient),
          returnValueForMissingStub: null);
  @override
  num get amount =>
      (super.noSuchMethod(Invocation.getter(#amount), returnValue: 0) as num);
  @override
  set amount(num? _amount) =>
      super.noSuchMethod(Invocation.setter(#amount, _amount),
          returnValueForMissingStub: null);
  @override
  String get itemCode =>
      (super.noSuchMethod(Invocation.getter(#itemCode), returnValue: '')
          as String);
  @override
  String get code =>
      (super.noSuchMethod(Invocation.getter(#code), returnValue: '') as String);
  @override
  String get name =>
      (super.noSuchMethod(Invocation.getter(#name), returnValue: '') as String);
  @override
  String get prefix =>
      (super.noSuchMethod(Invocation.getter(#prefix), returnValue: '')
          as String);
  @override
  _i7.Stores get storageStore =>
      (super.noSuchMethod(Invocation.getter(#storageStore),
          returnValue: _i7.Stores.menu) as _i7.Stores);
  @override
  String get id =>
      (super.noSuchMethod(Invocation.getter(#id), returnValue: '') as String);
  @override
  set id(String? _id) => super.noSuchMethod(Invocation.setter(#id, _id),
      returnValueForMissingStub: null);
  @override
  bool get isEmpty =>
      (super.noSuchMethod(Invocation.getter(#isEmpty), returnValue: false)
          as bool);
  @override
  bool get isNotEmpty =>
      (super.noSuchMethod(Invocation.getter(#isNotEmpty), returnValue: false)
          as bool);
  @override
  List<_i8.ProductQuantityModel> get itemList =>
      (super.noSuchMethod(Invocation.getter(#itemList),
              returnValue: <_i8.ProductQuantityModel>[])
          as List<_i8.ProductQuantityModel>);
  @override
  Iterable<_i8.ProductQuantityModel> get items =>
      (super.noSuchMethod(Invocation.getter(#items),
              returnValue: <_i8.ProductQuantityModel>[])
          as Iterable<_i8.ProductQuantityModel>);
  @override
  int get length =>
      (super.noSuchMethod(Invocation.getter(#length), returnValue: 0) as int);
  @override
  _i9.Future<void> addItemToStorage(_i8.ProductQuantityModel? child) =>
      (super.noSuchMethod(Invocation.method(#addItemToStorage, [child]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i9.Future<void>);
  @override
  _i9.Future<void> changeIngredient(String? newId) =>
      (super.noSuchMethod(Invocation.method(#changeIngredient, [newId]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i9.Future<void>);
  @override
  void notifyItem() => super.noSuchMethod(Invocation.method(#notifyItem, []),
      returnValueForMissingStub: null);
  @override
  void removeFromRepo() =>
      super.noSuchMethod(Invocation.method(#removeFromRepo, []),
          returnValueForMissingStub: null);
  @override
  void setIngredient(_i3.IngredientModel? model) =>
      super.noSuchMethod(Invocation.method(#setIngredient, [model]),
          returnValueForMissingStub: null);
  @override
  _i4.ProductIngredientObject toObject() =>
      (super.noSuchMethod(Invocation.method(#toObject, []),
              returnValue: _FakeProductIngredientObject())
          as _i4.ProductIngredientObject);
  @override
  String toString() =>
      (super.noSuchMethod(Invocation.method(#toString, []), returnValue: '')
          as String);
  @override
  _i9.Future<void> update(_i4.ProductIngredientObject? ingredient) =>
      (super.noSuchMethod(Invocation.method(#update, [ingredient]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i9.Future<void>);
  @override
  _i9.Future<void> remove() =>
      (super.noSuchMethod(Invocation.method(#remove, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i9.Future<void>);
  @override
  void addItem(_i8.ProductQuantityModel? item) =>
      super.noSuchMethod(Invocation.method(#addItem, [item]),
          returnValueForMissingStub: null);
  @override
  _i8.ProductQuantityModel? getItem(String? id) =>
      (super.noSuchMethod(Invocation.method(#getItem, [id]))
          as _i8.ProductQuantityModel?);
  @override
  bool hasItem(String? id) =>
      (super.noSuchMethod(Invocation.method(#hasItem, [id]), returnValue: false)
          as bool);
  @override
  void removeItem(String? id) =>
      super.noSuchMethod(Invocation.method(#removeItem, [id]),
          returnValueForMissingStub: null);
  @override
  void replaceItems(Map<String, _i8.ProductQuantityModel>? map) =>
      super.noSuchMethod(Invocation.method(#replaceItems, [map]),
          returnValueForMissingStub: null);
  @override
  _i9.Future<void> setItem(_i8.ProductQuantityModel? item) =>
      (super.noSuchMethod(Invocation.method(#setItem, [item]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i9.Future<void>);
}
